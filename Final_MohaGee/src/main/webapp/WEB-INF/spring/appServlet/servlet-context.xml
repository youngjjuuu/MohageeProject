<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- 파일 업로드를 위한 리졸버 등록하기 -->
	<!-- 멀티파트 리졸버로 저장할 파일의 최대 크기 등을 설정할 수 있다. -->
	<beans:bean id="multipartResolver"
	            class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	            <beans:property name="maxUploadSize" value="104857600"/> <!-- 10MB -->
	</beans:bean>
	
	<!-- json 데이터 전송방법 ver.1 -->
	<beans:bean id="viewResolver"
	            class="org.springframework.web.servlet.view.BeanNameViewResolver">
	     <beans:property name="order" value="1"/>
	</beans:bean>
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView" />
	
	<!-- jackson 객체를 사용하기 위한 설정 등록하기 (ver.2) -->
	<!-- @ResponseBody 어노테이션을 사용하여 자바 객체를 자동으로 json 형태 변환을 시켜주는 ViewResolver -->
	<beans:bean id="jacksonMessageConverter" 
	            class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<aop:config proxy-target-class="true">
		<aop:pointcut id="servicePC" 
		              expression="execution(* com.kh.mohagee..*Service.*(..))"/>
		<aop:advisor id="transactionAdvisor"
		             advice-ref="txAdvice" pointcut-ref="servicePC"/>
	</aop:config>
	
	<aop:aspectj-autoproxy/>
	
	<context:component-scan base-package="com.kh.mohagee" />
	
	
	
</beans:beans>
